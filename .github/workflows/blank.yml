# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [labeled]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          TARGET_BRANCH: ${{ github.base_ref }} # identical to $GITHUB_BASE_REF
        run: |
          check_format_release_branch() {
          regexp_release_branch="^release\/(20[2-9][1-9])(1[0-2]|0[1-9])(3[01]|[0-2][1-9]|[12]0)$"
          branch="$1"
          match_count=$(echo ${branch} | grep -o -P "${regexp_release_branch}" | wc -l)
          if [[ ${match_count} != 1 ]]; then
            >&2 echo "ERROR: release branch is not properly formatted (got \"${branch}\", expected \"release/yyyymmdd\")"; return 1
          fi
          return 0
          }
          last_release=$(git branch --all --list '*release/20*' | sort -r | head -n 1 | cut -c18-)
          echo $last_release
          echo ${TARGET_BRANCH}
          is_valid=$(check_format_release_branch ${TARGET_BRANCH})
          if [[ is_valid == 0 && ${TARGET_BRANCH} != $last_release ]];
          then
            echo "ERROR: target branch is old (got \"${GITHUB_BASE_REF}\", expected \"${last_release}\")"; 
            return 1
          fi
